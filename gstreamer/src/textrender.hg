// Generated by generate_plugin_gmmproc_file. Don't edit this file.


#include <gstreamermm/element.h>
_DEFS(gstreamermm,gst)

_CONFIGINCLUDE(gstreamermmconfig.h)
_IS_DEPRECATED

namespace Gst
{

_WRAP_ENUM(TextRenderHAlign,GstTextRenderHAlign)
_CONV_ENUM(Gst,TextRenderHAlign)

_WRAP_ENUM(TextRenderVAlign,GstTextRenderVAlign)
_CONV_ENUM(Gst,TextRenderVAlign)

_WRAP_ENUM(TextRenderLineAlign,GstTextRenderLineAlign)
_CONV_ENUM(Gst,TextRenderLineAlign)

/** A Wrapper for the textrender plugin.
 * Please note that not all plug-ins are available on all systems so care
 * must be taken that they exist before they are used otherwise there will
 * be errors and possibly a crash.
 *
 * @ingroup GstPlugins
 * @deprecated Plugins API is deprecated, and should not be used in a new code.
 */
class TextRender
: public Gst::Element
{
  _CLASS_GOBJECT(TextRender, GstTextRender, GST_TEXT_RENDER_GSTREAMERMM, Gst::Element, GstElement)
  _IS_GSTREAMERMM_PLUGIN
protected:
  TextRender();
  explicit TextRender(const Glib::ustring& name);

public:
  /** Creates a new textrender plugin with a unique name.
   */
  _WRAP_CREATE()

  /** Creates a new textrender plugin with the given name.
   */
  _WRAP_CREATE(const Glib::ustring& name)

  _WRAP_PROPERTY("halignment", Gst::TextRenderHAlign)
  _WRAP_PROPERTY("valignment", Gst::TextRenderVAlign)
  _WRAP_PROPERTY("line-alignment", Gst::TextRenderLineAlign)
  _WRAP_PROPERTY("xpad", int)
  _WRAP_PROPERTY("ypad", int)
  _WRAP_PROPERTY("font-desc", Glib::ustring)
};

} // namespace Gst
