// Generated by gmmproc 2.50.1 -- DO NOT MODIFY!
#ifndef _GSTREAMERMM_AUDIOSINK_P_H
#define _GSTREAMERMM_AUDIOSINK_P_H


#include <glibmm/class.h>

namespace Gst
{

class AudioSink_Class : public Glib::Class
{
public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  using CppObjectType = AudioSink;
  using BaseObjectType = GstAudioSink;
  using BaseClassType = GstAudioSinkClass;
  using CppClassParent = Gst::AudioBaseSink_Class;
  using BaseClassParent = GstAudioBaseSinkClass;

  friend class AudioSink;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();


  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.

  //Callbacks (virtual functions):
  static gboolean open_vfunc_callback(GstAudioSink* self);
  static gboolean unprepare_vfunc_callback(GstAudioSink* self);
  static gboolean close_vfunc_callback(GstAudioSink* self);
  static gint write_vfunc_callback(GstAudioSink* self, gpointer data, guint length);
  static guint delay_vfunc_callback(GstAudioSink* self);
  static void reset_vfunc_callback(GstAudioSink* self);
  static gboolean prepare_audiosink_vfunc_callback(GstAudioSink* self, GstAudioRingBufferSpec* spec);
  };


} // namespace Gst

#include <gstreamermm/private/audiobasesink_p.h>


#endif /* _GSTREAMERMM_AUDIOSINK_P_H */

