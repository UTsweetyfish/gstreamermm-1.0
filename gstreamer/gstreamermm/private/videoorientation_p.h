// Generated by gmmproc 2.50.1 -- DO NOT MODIFY!
#ifndef _GSTREAMERMM_VIDEOORIENTATION_P_H
#define _GSTREAMERMM_VIDEOORIENTATION_P_H


#include <glibmm/private/interface_p.h>

namespace Gst
{

class VideoOrientation_Class : public Glib::Interface_Class
{
public:
  using CppObjectType = VideoOrientation;
  using BaseObjectType = GstVideoOrientation;
  using BaseClassType = GstVideoOrientationInterface;
  using CppClassParent = Glib::Interface_Class;

  friend class VideoOrientation;

  const Glib::Interface_Class& init();

  static void iface_init_function(void* g_iface, void* iface_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.

  //Callbacks (virtual functions):
  static gboolean get_hcenter_vfunc_callback(GstVideoOrientation* self, gint* center);
  static gboolean get_vcenter_vfunc_callback(GstVideoOrientation* self, gint* center);
  static gboolean set_hflip_vfunc_callback(GstVideoOrientation* self, gboolean flip);
  static gboolean set_vflip_vfunc_callback(GstVideoOrientation* self, gboolean flip);
  static gboolean set_hcenter_vfunc_callback(GstVideoOrientation* self, gint center);
  static gboolean set_vcenter_vfunc_callback(GstVideoOrientation* self, gint center);
  static gboolean get_hflip_vfunc_callback(GstVideoOrientation* self, gboolean* flip);
  static gboolean get_vflip_vfunc_callback(GstVideoOrientation* self, gboolean* flip);
  };


} // namespace Gst


#endif /* _GSTREAMERMM_VIDEOORIENTATION_P_H */

