// Generated by generate_wrap_init.pl -- DO NOT MODIFY!

#define GLIBMM_INCLUDED_FROM_WRAP_INIT_CC
#include <glibmm.h>

// Disable the 'const' function attribute of the get_type() functions.
// GCC would optimize them out because we don't use the return value.
#undef  G_GNUC_CONST
#define G_GNUC_CONST /* empty */

#include <gstreamermm/wrap_init.h>
#include <glibmm/error.h>
#include <glibmm/object.h>

// #include the widget headers so that we can call the get_type() static methods:
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "adder.h"
#endif // *_DISABLE_DEPRECATED
#include "allocator.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "alsasink.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "alsasrc.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "appsink.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "appsrc.h"
#endif // *_DISABLE_DEPRECATED
#include "audiobasesink.h"
#include "audiobasesrc.h"
#include "audiocdsrc.h"
#include "audioclock.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "audioconvert.h"
#endif // *_DISABLE_DEPRECATED
#include "audiofilter.h"
#include "audioformat.h"
#include "audioinfo.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "audiorate.h"
#endif // *_DISABLE_DEPRECATED
#include "audioringbuffer.h"
#include "audiosink.h"
#include "audiosrc.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "audiotestsrc.h"
#endif // *_DISABLE_DEPRECATED
#include "basesink.h"
#include "basesrc.h"
#include "basetransform.h"
#include "bin.h"
#include "buffer.h"
#include "bufferlist.h"
#include "bus.h"
#include "caps.h"
#include "capsfeatures.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "capsfilter.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "cdparanoiasrc.h"
#endif // *_DISABLE_DEPRECATED
#include "childproxy.h"
#include "clock.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "clockoverlay.h"
#endif // *_DISABLE_DEPRECATED
#include "clockutils.h"
#include "colorbalance.h"
#include "colorbalancechannel.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "concat.h"
#endif // *_DISABLE_DEPRECATED
#include "context.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "decodebin.h"
#endif // *_DISABLE_DEPRECATED
#include "discoverer.h"
#include "discovererinfo.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "downloadbuffer.h"
#endif // *_DISABLE_DEPRECATED
#include "element.h"
#include "elementfactory.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "encodebin.h"
#endif // *_DISABLE_DEPRECATED
#include "encodingprofile.h"
#include "enums.h"
#include "error.h"
#include "event.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "fakesink.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "fakesrc.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "fdsink.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "fdsrc.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "filesink.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "filesrc.h"
#endif // *_DISABLE_DEPRECATED
#include "format.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "funnel.h"
#endif // *_DISABLE_DEPRECATED
#include "ghostpad.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "giosink.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "giosrc.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "giostreamsink.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "giostreamsrc.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "identity.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "inputselector.h"
#endif // *_DISABLE_DEPRECATED
#include "iterator.h"
#include "mapinfo.h"
#include "memory.h"
#include "message.h"
#include "miniobject.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "multifdsink.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "multiqueue.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "multisocketsink.h"
#endif // *_DISABLE_DEPRECATED
#include "navigation.h"
#include "netclientclock.h"
#include "object.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "oggdemux.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "oggmux.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "outputselector.h"
#endif // *_DISABLE_DEPRECATED
#include "pad.h"
#include "padtemplate.h"
#include "parse.h"
#include "pipeline.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "playbin.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "playsink.h"
#endif // *_DISABLE_DEPRECATED
#include "plugin.h"
#include "pluginfeature.h"
#include "preset.h"
#include "pushsrc.h"
#include "query.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "queue.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "queue2.h"
#endif // *_DISABLE_DEPRECATED
#include "registry.h"
#include "sample.h"
#include "sdpmessage.h"
#include "segment.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "socketsrc.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "streamiddemux.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "streamsynchronizer.h"
#endif // *_DISABLE_DEPRECATED
#include "streamvolume.h"
#include "structure.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "subtitleoverlay.h"
#endif // *_DISABLE_DEPRECATED
#include "systemclock.h"
#include "taglist.h"
#include "tagsetter.h"
#include "task.h"
#include "taskpool.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "tcpclientsink.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "tcpclientsrc.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "tcpserversink.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "tcpserversrc.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "tee.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "textoverlay.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "textrender.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "theoradec.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "theoraenc.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "theoraparse.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "timeoverlay.h"
#endif // *_DISABLE_DEPRECATED
#include "toc.h"
#include "tocsetter.h"
#include "typefind.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "typefindelement.h"
#endif // *_DISABLE_DEPRECATED
#include "typefindfactory.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "uridecodebin.h"
#endif // *_DISABLE_DEPRECATED
#include "urihandler.h"
#include "value.h"
#include "valuelist.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "valve.h"
#endif // *_DISABLE_DEPRECATED
#include "videochroma.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "videoconvert.h"
#endif // *_DISABLE_DEPRECATED
#include "videoformat.h"
#include "videoframe.h"
#include "videoinfo.h"
#include "videoorientation.h"
#include "videooverlay.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "videorate.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "videoscale.h"
#endif // *_DISABLE_DEPRECATED
#include "videosink.h"
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "videotestsrc.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "volume.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "vorbisdec.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "vorbisenc.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "vorbisparse.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "vorbistag.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "ximagesink.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
#include "xvimagesink.h"
#endif // *_DISABLE_DEPRECATED

extern "C"
{
//Declarations of the *_get_type() functions:

#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_adder_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_allocator_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_alsa_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_alsa_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_app_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_app_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_audio_base_sink_get_type(void);
GType gst_audio_base_src_get_type(void);
GType gst_audio_cd_src_get_type(void);
GType gst_audio_clock_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_audio_convert_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_audio_filter_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_audio_rate_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_audio_ring_buffer_get_type(void);
GType gst_audio_sink_get_type(void);
GType gst_audio_src_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_audio_test_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_base_sink_get_type(void);
GType gst_base_src_get_type(void);
GType gst_base_transform_get_type(void);
GType gst_bin_get_type(void);
GType gst_bus_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_caps_filter_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_cd_paranoia_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_clock_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_clock_overlay_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_color_balance_channel_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_concat_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_decode_bin_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_discoverer_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_download_buffer_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_element_get_type(void);
GType gst_element_factory_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_encode_bin_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_encoding_profile_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_fake_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_fake_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_fd_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_fd_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_file_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_file_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_funnel_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_ghost_pad_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_gio_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_gio_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_gio_stream_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_gio_stream_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_identity_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_input_selector_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_multi_fd_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_multi_queue_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_multi_socket_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_net_client_clock_get_type(void);
GType gst_object_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_ogg_demux_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_ogg_mux_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_output_selector_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_pad_get_type(void);
GType gst_pad_template_get_type(void);
GType gst_pipeline_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_play_bin_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_play_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_plugin_get_type(void);
GType gst_plugin_feature_get_type(void);
GType gst_push_src_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_queue_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_queue2_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_registry_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_socket_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_streamid_demux_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_stream_synchronizer_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_subtitle_overlay_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_system_clock_get_type(void);
GType gst_task_get_type(void);
GType gst_task_pool_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_tcp_client_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_tcp_client_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_tcp_server_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_tcp_server_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_tee_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_text_overlay_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_text_render_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_theora_dec_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_theora_enc_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_theora_parse_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_time_overlay_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_type_find_element_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_type_find_factory_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_uri_decode_bin_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_valve_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_video_convert_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_video_rate_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_video_scale_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gst_video_sink_get_type(void);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_video_test_src_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_volume_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_vorbis_dec_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_vorbis_enc_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_vorbis_parse_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_vorbis_tag_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_x_image_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
GType gst_xv_image_sink_gstreamermm_get_type(void);
#endif // *_DISABLE_DEPRECATED

//Declarations of the *_error_quark() functions:

GQuark gst_core_error_quark(void);
GQuark gst_library_error_quark(void);
GQuark gst_resource_error_quark(void);
GQuark gst_stream_error_quark(void);
GQuark gst_parse_error_quark(void);
GQuark gst_plugin_error_quark(void);
} // extern "C"

namespace Gst {

//Declarations of the *_Class::wrap_new() methods, instead of including all the private headers:

#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class Adder_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class Allocator_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class AlsaSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class AlsaSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class AppSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class AppSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class AudioBaseSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class AudioBaseSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class AudioCdSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class AudioClock_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class AudioConvert_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class AudioFilter_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class AudioRate_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class AudioRingBuffer_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class AudioSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class AudioSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class AudioTestSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class BaseSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class BaseSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class BaseTransform_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Bin_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Bus_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class CapsFilter_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class CdParanoiaSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class Clock_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class ClockOverlay_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class ColorBalanceChannel_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class Concat_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class DecodeBin_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class Discoverer_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class DownloadBuffer_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class Element_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ElementFactory_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class EncodeBin_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class EncodingProfile_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class FakeSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class FakeSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class FdSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class FdSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class FileSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class FileSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class Funnel_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class GhostPad_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class GioSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class GioSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class GioStreamSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class GioStreamSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class Identity_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class InputSelector_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class MultiFdSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class MultiQueue_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class MultiSocketSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class NetClientClock_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Object_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class OggDemux_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class OggMux_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class OutputSelector_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class Pad_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class PadTemplate_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Pipeline_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class PlayBin_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class PlaySink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class Plugin_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class PluginFeature_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class PushSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class Queue_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class Queue2_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class Registry_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class SocketSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class StreamidDemux_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class StreamSynchronizer_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class SubtitleOverlay_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class SystemClock_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Task_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TaskPool_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class TCPClientSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class TCPClientSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class TCPServerSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class TCPServerSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class Tee_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class TextOverlay_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class TextRender_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class TheoraDec_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class TheoraEnc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class TheoraParse_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class TimeOverlay_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class TypeFindElement_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class TypeFindFactory_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class UriDecodeBin_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class Valve_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class VideoConvert_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class VideoRate_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class VideoScale_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class VideoSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class VideoTestSrc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class Volume_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class VorbisDec_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class VorbisEnc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class VorbisParse_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class VorbisTag_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class XImageSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
class XvImageSink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED

void wrap_init()
{
  // Register Error domains in the main namespace:
  Glib::Error::register_domain(gst_core_error_quark(), &CoreError::throw_func);
  Glib::Error::register_domain(gst_library_error_quark(), &LibraryError::throw_func);
  Glib::Error::register_domain(gst_resource_error_quark(), &ResourceError::throw_func);
  Glib::Error::register_domain(gst_stream_error_quark(), &StreamError::throw_func);
  Glib::Error::register_domain(gst_parse_error_quark(), &ParseError::throw_func);
  Glib::Error::register_domain(gst_plugin_error_quark(), &PluginError::throw_func);

  // Map gtypes to gtkmm wrapper-creation functions:
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_adder_gstreamermm_get_type(), &Adder_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_allocator_get_type(), &Allocator_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_alsa_sink_gstreamermm_get_type(), &AlsaSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_alsa_src_gstreamermm_get_type(), &AlsaSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_app_sink_gstreamermm_get_type(), &AppSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_app_src_gstreamermm_get_type(), &AppSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_audio_base_sink_get_type(), &AudioBaseSink_Class::wrap_new);
  Glib::wrap_register(gst_audio_base_src_get_type(), &AudioBaseSrc_Class::wrap_new);
  Glib::wrap_register(gst_audio_cd_src_get_type(), &AudioCdSrc_Class::wrap_new);
  Glib::wrap_register(gst_audio_clock_get_type(), &AudioClock_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_audio_convert_gstreamermm_get_type(), &AudioConvert_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_audio_filter_get_type(), &AudioFilter_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_audio_rate_gstreamermm_get_type(), &AudioRate_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_audio_ring_buffer_get_type(), &AudioRingBuffer_Class::wrap_new);
  Glib::wrap_register(gst_audio_sink_get_type(), &AudioSink_Class::wrap_new);
  Glib::wrap_register(gst_audio_src_get_type(), &AudioSrc_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_audio_test_src_gstreamermm_get_type(), &AudioTestSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_base_sink_get_type(), &BaseSink_Class::wrap_new);
  Glib::wrap_register(gst_base_src_get_type(), &BaseSrc_Class::wrap_new);
  Glib::wrap_register(gst_base_transform_get_type(), &BaseTransform_Class::wrap_new);
  Glib::wrap_register(gst_bin_get_type(), &Bin_Class::wrap_new);
  Glib::wrap_register(gst_bus_get_type(), &Bus_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_caps_filter_gstreamermm_get_type(), &CapsFilter_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_cd_paranoia_src_gstreamermm_get_type(), &CdParanoiaSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_clock_get_type(), &Clock_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_clock_overlay_gstreamermm_get_type(), &ClockOverlay_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_color_balance_channel_get_type(), &ColorBalanceChannel_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_concat_gstreamermm_get_type(), &Concat_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_decode_bin_gstreamermm_get_type(), &DecodeBin_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_discoverer_get_type(), &Discoverer_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_download_buffer_gstreamermm_get_type(), &DownloadBuffer_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_element_get_type(), &Element_Class::wrap_new);
  Glib::wrap_register(gst_element_factory_get_type(), &ElementFactory_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_encode_bin_gstreamermm_get_type(), &EncodeBin_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_encoding_profile_get_type(), &EncodingProfile_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_fake_sink_gstreamermm_get_type(), &FakeSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_fake_src_gstreamermm_get_type(), &FakeSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_fd_sink_gstreamermm_get_type(), &FdSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_fd_src_gstreamermm_get_type(), &FdSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_file_sink_gstreamermm_get_type(), &FileSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_file_src_gstreamermm_get_type(), &FileSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_funnel_gstreamermm_get_type(), &Funnel_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_ghost_pad_get_type(), &GhostPad_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_gio_sink_gstreamermm_get_type(), &GioSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_gio_src_gstreamermm_get_type(), &GioSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_gio_stream_sink_gstreamermm_get_type(), &GioStreamSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_gio_stream_src_gstreamermm_get_type(), &GioStreamSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_identity_gstreamermm_get_type(), &Identity_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_input_selector_gstreamermm_get_type(), &InputSelector_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_multi_fd_sink_gstreamermm_get_type(), &MultiFdSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_multi_queue_gstreamermm_get_type(), &MultiQueue_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_multi_socket_sink_gstreamermm_get_type(), &MultiSocketSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_net_client_clock_get_type(), &NetClientClock_Class::wrap_new);
  Glib::wrap_register(gst_object_get_type(), &Object_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_ogg_demux_gstreamermm_get_type(), &OggDemux_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_ogg_mux_gstreamermm_get_type(), &OggMux_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_output_selector_gstreamermm_get_type(), &OutputSelector_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_pad_get_type(), &Pad_Class::wrap_new);
  Glib::wrap_register(gst_pad_template_get_type(), &PadTemplate_Class::wrap_new);
  Glib::wrap_register(gst_pipeline_get_type(), &Pipeline_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_play_bin_gstreamermm_get_type(), &PlayBin_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_play_sink_gstreamermm_get_type(), &PlaySink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_plugin_get_type(), &Plugin_Class::wrap_new);
  Glib::wrap_register(gst_plugin_feature_get_type(), &PluginFeature_Class::wrap_new);
  Glib::wrap_register(gst_push_src_get_type(), &PushSrc_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_queue_gstreamermm_get_type(), &Queue_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_queue2_gstreamermm_get_type(), &Queue2_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_registry_get_type(), &Registry_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_socket_src_gstreamermm_get_type(), &SocketSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_streamid_demux_gstreamermm_get_type(), &StreamidDemux_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_stream_synchronizer_gstreamermm_get_type(), &StreamSynchronizer_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_subtitle_overlay_gstreamermm_get_type(), &SubtitleOverlay_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_system_clock_get_type(), &SystemClock_Class::wrap_new);
  Glib::wrap_register(gst_task_get_type(), &Task_Class::wrap_new);
  Glib::wrap_register(gst_task_pool_get_type(), &TaskPool_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_tcp_client_sink_gstreamermm_get_type(), &TCPClientSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_tcp_client_src_gstreamermm_get_type(), &TCPClientSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_tcp_server_sink_gstreamermm_get_type(), &TCPServerSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_tcp_server_src_gstreamermm_get_type(), &TCPServerSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_tee_gstreamermm_get_type(), &Tee_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_text_overlay_gstreamermm_get_type(), &TextOverlay_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_text_render_gstreamermm_get_type(), &TextRender_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_theora_dec_gstreamermm_get_type(), &TheoraDec_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_theora_enc_gstreamermm_get_type(), &TheoraEnc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_theora_parse_gstreamermm_get_type(), &TheoraParse_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_time_overlay_gstreamermm_get_type(), &TimeOverlay_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_type_find_element_gstreamermm_get_type(), &TypeFindElement_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_type_find_factory_get_type(), &TypeFindFactory_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_uri_decode_bin_gstreamermm_get_type(), &UriDecodeBin_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_valve_gstreamermm_get_type(), &Valve_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_video_convert_gstreamermm_get_type(), &VideoConvert_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_video_rate_gstreamermm_get_type(), &VideoRate_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_video_scale_gstreamermm_get_type(), &VideoScale_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gst_video_sink_get_type(), &VideoSink_Class::wrap_new);
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_video_test_src_gstreamermm_get_type(), &VideoTestSrc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_volume_gstreamermm_get_type(), &Volume_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_vorbis_dec_gstreamermm_get_type(), &VorbisDec_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_vorbis_enc_gstreamermm_get_type(), &VorbisEnc_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_vorbis_parse_gstreamermm_get_type(), &VorbisParse_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_vorbis_tag_gstreamermm_get_type(), &VorbisTag_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_x_image_sink_gstreamermm_get_type(), &XImageSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Glib::wrap_register(gst_xv_image_sink_gstreamermm_get_type(), &XvImageSink_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED

  // Register the gtkmm gtypes:
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Adder::get_type();
#endif // *_DISABLE_DEPRECATED
  Allocator::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  AlsaSink::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  AlsaSrc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  AppSink::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  AppSrc::get_type();
#endif // *_DISABLE_DEPRECATED
  AudioBaseSink::get_type();
  AudioBaseSrc::get_type();
  AudioCdSrc::get_type();
  AudioClock::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  AudioConvert::get_type();
#endif // *_DISABLE_DEPRECATED
  AudioFilter::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  AudioRate::get_type();
#endif // *_DISABLE_DEPRECATED
  AudioRingBuffer::get_type();
  AudioSink::get_type();
  AudioSrc::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  AudioTestSrc::get_type();
#endif // *_DISABLE_DEPRECATED
  BaseSink::get_type();
  BaseSrc::get_type();
  BaseTransform::get_type();
  Bin::get_type();
  Bus::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  CapsFilter::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  CdParanoiaSrc::get_type();
#endif // *_DISABLE_DEPRECATED
  Clock::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  ClockOverlay::get_type();
#endif // *_DISABLE_DEPRECATED
  ColorBalanceChannel::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Concat::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  DecodeBin::get_type();
#endif // *_DISABLE_DEPRECATED
  Discoverer::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  DownloadBuffer::get_type();
#endif // *_DISABLE_DEPRECATED
  Element::get_type();
  ElementFactory::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  EncodeBin::get_type();
#endif // *_DISABLE_DEPRECATED
  EncodingProfile::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  FakeSink::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  FakeSrc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  FdSink::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  FdSrc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  FileSink::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  FileSrc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Funnel::get_type();
#endif // *_DISABLE_DEPRECATED
  GhostPad::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  GioSink::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  GioSrc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  GioStreamSink::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  GioStreamSrc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Identity::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  InputSelector::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  MultiFdSink::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  MultiQueue::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  MultiSocketSink::get_type();
#endif // *_DISABLE_DEPRECATED
  NetClientClock::get_type();
  Object::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  OggDemux::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  OggMux::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  OutputSelector::get_type();
#endif // *_DISABLE_DEPRECATED
  Pad::get_type();
  PadTemplate::get_type();
  Pipeline::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  PlayBin::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  PlaySink::get_type();
#endif // *_DISABLE_DEPRECATED
  Plugin::get_type();
  PluginFeature::get_type();
  PushSrc::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Queue::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Queue2::get_type();
#endif // *_DISABLE_DEPRECATED
  Registry::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  SocketSrc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  StreamidDemux::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  StreamSynchronizer::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  SubtitleOverlay::get_type();
#endif // *_DISABLE_DEPRECATED
  SystemClock::get_type();
  Task::get_type();
  TaskPool::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  TCPClientSink::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  TCPClientSrc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  TCPServerSink::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  TCPServerSrc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Tee::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  TextOverlay::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  TextRender::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  TheoraDec::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  TheoraEnc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  TheoraParse::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  TimeOverlay::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  TypeFindElement::get_type();
#endif // *_DISABLE_DEPRECATED
  TypeFindFactory::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  UriDecodeBin::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Valve::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  VideoConvert::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  VideoRate::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  VideoScale::get_type();
#endif // *_DISABLE_DEPRECATED
  VideoSink::get_type();
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  VideoTestSrc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  Volume::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  VorbisDec::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  VorbisEnc::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  VorbisParse::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  VorbisTag::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  XImageSink::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GSTREAMERMM_DISABLE_DEPRECATED
  XvImageSink::get_type();
#endif // *_DISABLE_DEPRECATED

} // wrap_init()

} // Gst

